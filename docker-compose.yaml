version: '3.8'
services:
  db:
    image: postgres:13.3
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cuapi_db
    volumes:
      - db-volume:/var/lib/postgresql/data
    networks:
      - cuapi
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 30s
      retries: 10
  redis:
    image: redis:6.2.6
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 30s
      retries: 10
    networks:
      - cuapi
  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    image: ngcnathan/backend:latest
    env_file:
      - .env
    environment:
      POSTGRES_HOST: "db"
      POSTGRES_DB: "cuapi_db"
      REDIS_HOST: "redis"
    ports:
      - "3969:3969"
    networks:
      - cuapi
    volumes:
      - .:/app
      - static-volume:/app/staticfiles
    command: sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:3969 cuapi.wsgi:application"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3969/healthz"]
      interval: 30s
      timeout: 30s
      retries: 10
  celery-beat:
    image: ngcnathan/backend:latest
    env_file:
      - .env
    environment:
      REDIS_HOST: "redis"
      POSTGRES_HOST: "db"
      POSTGRES_DB: "cuapi_db"
    networks:
      - cuapi
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy
    # celery -A cuapi beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    command: ["celery", "-A", "cuapi", "beat", "-l", "info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]
  celery-worker:
    image: ngcnathan/backend:latest
    env_file:
      - .env
    environment:
      REDIS_HOST: "redis"
      POSTGRES_HOST: "db"
      POSTGRES_DB: "cuapi_db"
    networks:
      - cuapi
    depends_on:
      backend:
        condition: service_healthy
    # celery -A cuapi worker -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler 
    command: ["celery", "-A", "cuapi", "worker", "-l", "info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]
  nginx:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    volumes:
      - certbot-data:/etc/letsencrypt
      - certbot-logs:/var/log/letsencrypt
      - saved-nginx-conf:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - "frontend"
      - "backend"
    networks:
      - cuapi
    env_file:
      - .env
    image: ngcnathan/nginx:latest
  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    env_file:
      - .env
    ports:
      - "3959:3959"
    networks:
      - cuapi
    image: ngcnathan/frontend:latest
networks:
  cuapi:
    driver: bridge
volumes:
  db-volume:
  certbot-data:
  certbot-logs:
  saved-nginx-conf:
  static-volume: