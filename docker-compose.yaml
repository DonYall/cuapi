version: '3.8'
services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    volumes:
      - certbot-data:/etc/letsencrypt
      - certbot-logs:/var/log/letsencrypt
      - saved-nginx-conf:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - "frontend"
      - "backend"
    networks:
      - cuapi
    env_file:
      - .env
    image: ngcnathan/nginx:latest
  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    image: ngcnathan/backend:latest
    env_file:
      - .env
    environment:
      POSTGRES_HOST: "db"
      POSTGRES_DB: "cuapi"
      REDIS_HOST: "redis"
      NEO4J_URI: "bolt://neo4j:7687"
    ports:
      - "3969:3969"
    networks:
      - cuapi
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    command: ["./wait-for-it.sh", "neo4j:7687", "--", "/backend"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3969/healthz"]
      interval: 30s
      timeout: 30s
      retries: 10
  scrapercron:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.scraper
    image: ngcnathan/scrapercron:latest
    env_file:
      - .env
    environment:
      BACKEND_URL: "backend:3969"
    networks:
      - cuapi
    depends_on:
      backend:
        condition: service_healthy
  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    env_file:
      - .env
    ports:
      - "3959:3959"
    networks:
      - cuapi
    image: ngcnathan/frontend:latest
  redis:
    image: redis/redis-stack:6.2.6-v7
    ports:
      - "6379:6379"
    env_file:
      - .env
    networks:
      - cuapi
  db:
    image: neo4j:latest
    hostname: neo4j
    container_name: neo4j
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    environment:
      NEO4J_AUTH: neo4j/testpassword
      NEO4J_dbms_memory_heap_initial__size: 512M
      NEO4J_dbms_memory_heap_max__size: 1G
    volumes:
      - db-data:/var/lib/neo4j/data
    ulimits:
      nofile:
        soft: 40000
        hard: 40000
    restart: unless-stopped
    networks:
      - cuapi
    healthcheck:
    #/var/lib/neo4j/bin/neo4j status
      test: ["CMD", "/var/lib/neo4j/bin/neo4j", "status"]
      interval: 30s
      timeout: 30s
      retries: 10
volumes:
  db-data:
  certbot-data:
  certbot-logs:
  saved-nginx-conf:
networks:
  cuapi:
    driver: bridge
